/* ECE3220 Lab9_example.cpp
 * Author: Luis Rivera
 *
 * This program shows how to use wiringPi on the Raspberri Pi 3 to turn on and off
 * an LED on the auxiliary board.

  Compile using -lwiringPi
	g++ Lab9_example.c -o Lab9_example -lwiringPi
		or
	add wiringPi to the linker (-l), if using Eclipse
 */

#include <iostream>
#include <unistd.h>		// sleep, usleep functions
#include <wiringPi.h>	// needed for the wiringPi functions

#define LED1  8	// wiringPi number corresponding to GPIO2.
#define LED2  7				//Check Figures 2 and 3 in the Lab9 guide.
#define LED3  9
#define LED4  21

int main(int argc, char **argv)
{
	wiringPiSetup();	// wiringPiSetupGpio() could be used. The numbers for the ports would
	// need to match the RPi GPIO pinout.

	pinMode(LED1, OUTPUT);	// Configure GPIO2, which is the one connected to the red LED.
	pinMode(LED2, OUTPUT);
	pinMode(LED3, OUTPUT);
	pinMode(LED4, OUTPUT);
	int i = 0;

	// The program will turn off the red LED, sleep for a while, then on, sleep, off, on and off.
	// You could use loops, if you wanted/needed.
	while(i >= 3)
	{
		digitalWrite(LED1, LOW); //red goes off
		sleep(2);
		digitalWrite(LED4, HIGH);//green goes on
		sleep(1);
		digitalWrite(LED4, LOW);//green goes on
		sleep(1);
		digitalWrite(LED1, HIGH);//red goes on
		sleep(1);
		digitalWrite(LED1, LOW);//red goes off
		sleep(1);
		digitalWrite(LED2, HIGH);//yellow comes on
		sleep(1);
		digitalWrite(LED2, LOW);// yellow goes off
		sleep(1);
		digitalWrite(LED3, HIGH);//Blue comes on
		sleep(2);
		digitalWrite(LED4, HIGH);// green comes on
	}
	return 0;
}
